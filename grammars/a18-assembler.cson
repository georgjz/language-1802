# Syntax highlighting for Crossware 6809 assembler toolchain

scopeName: 'source.a18'
name: 'A18 Assembler (1802)'
fileTypes: [
  's'
  'S'
  'asm'
]
patterns: [
  { include: 'source.1802-opcodes' } # 1802 opcodes
  { include: '#comments' } # comments
  { include: '#symbols' } # symbols
  { include: '#directives' } # Assembler directives for crossware6809
]

# start of repository ----------------------------------------------------------
repository:

  # comments
  comments:
    patterns: [
      # semicolon comments
      {
        match: ';.*$'
        name: 'comment.line.semicolon.a18'
      }
    ]

  # symbols
  symbols:
    patterns: [
      # strings
      {
        begin: '"'
        beginCaptures:
          0:
            name: 'punctuation.definition.string.begin.a18'
        end: '"'
        endCaptures:
          0:
            name: 'punctuation.definition.string.end.a18'
        name: 'string.quoted.double.source.a18'
      }
      # absolut addressing/numbers
      {
        match: '\\#(\'.\'|[^\\s\']+)'
        name: 'constant.numeric.hex.a18'
      }
      # hex, prefixed with dollar sign($)
      {
        match: '-?\\$\\b[a-fA-F0-9]+\\b'
        name: 'constant.numeric.hex.a18'
      }
      # hex, suffixed with h(h)
      {
        match: '-?\\b([a-fA-F0-9]+)[hH]\\b'
        name: 'constant.numeric.hex.source.a18'
      }
      # binary
      {
        match: '%[01]+'
        name: 'constant.numeric.binary.a18'
      }
      # decimal
      {
        match: '\\b([0-9]+)\\b'
        name: 'constant.numeric.decimal.a18'
      }
    ]

  # assembler directives
  directives:
    patterns: [
      # a18 pseudo opcodes
      {
        match: '\\b(?i:blk|byte|db|ejct|end|equ|if|else|endi|incl|load|org|page|set|text|titl|word|dw|call|retn)\\b'
        name: 'support.function.pseudo.a18'
      }
      # Operators
      {
        match: '(?i:\\*|\\/|\\-|\\+|=|<=|>=|<|>|><|<>|mod|shl|shr|\\$)'
        name: 'keyword.operator.a18'
      }
      # Operators II
      {
        match: '(\\.)\\b(?i:and|not|or|xor|lt|le|eq|ge|gt|ne)\\b'
        name: 'support.function.pseudo.a18'
      }
    ]
